标题,标题链接,search-detail,limit_width1,https,作者,日期,https1,down,详情标题,日期时间,内容
人工智能,https://blog.csdn.net/qq_43167223/article/details/83244956,init()方法n需求：在上一小节的demo中，我们已经给BMW这个对象添加了2个属性，wheelNum（车的轮胎数量）以及color（车的颜色），试想如果再次创建一个对象的话，肯定也需要进行添加属性，显然这样做很费事，那么有没有办法能够在创建对象的时候，就顺便把车这个对象的属性给设置呢？n答案 init()方法n“魔法” 方法n总结n在python中方法名如果是xxxx()的，那么就有特殊的功能...,https://blog.csdn.net/qq_43167223/article/details/83244956,,qq_43167223,2018-10-21,//blog.csdn.net/qq_43167223/article/details/83244956,270次阅读,人工智能 - qq_43167223的博客,2018年10月21日 20:33:55,原        人工智能
      
      
        
                                                  2018年10月21日 20:33:55
          芜杂栾雨，芜杂銮舆
          阅读数：273
                  
        
                  
      
    
  
  
    
            
                              
            
            
              
            
            init()方法
需求：在上一小节的demo中，我们已经给BMW这个对象添加了2个属性，wheelNum（车的轮胎数量）以及color（车的颜色），试想如果再次创建一个对象的话，肯定也需要进行添加属性，显然这样做很费事，那么有没有办法能够在创建对象的时候，就顺便把车这个对象的属性给设置呢？
答案 init()方法
“魔法” 方法
总结
在python中方法名如果是xxxx()的，那么就有特殊的功能，因此叫做“魔法”方法
当使用print输出对象的时候，只要自己定义了str(self)方法，那么就会打印从在这个方法中return的数据
理解self
总结
所谓的self，可以理解为自己
可以把self当做C++中类里面的this指针一样理解，就是对象自身的意思
某个对象调用其方法时，python解释器会把这个对象作为第一个参数传递给self，所以开发者只需要传递后面的参数即可
总结：如果一个对象与另外一个对象有一定的关系，那么一个对象可用是另外一个对象的属性
保护对象的属性
如果有一个对象，当需要对其进行修改属性时，有2种方法对象名.属性名 = 数据 ---->直接修改对象名.方法名() ---->间接修改为了更好的保存属性安全，即不能随意修改，一般的处理方式为
将属性定义为私有属性
添加一个可以调用的方法，供调用
总结
Python中没有像C++中public和private这些关键字来区别公有属性和私有属性
它是以属性命名方式来区分，如果在属性名前面加了2个下划线’__’，则表明该属性是私有属性，否则为公有属性（方法也是一样，方法名前面加了2个下划线的话表示该方法是私有的，否则为公有的）。
del()方法
创建对象后，python解释器默认调用init()方法；
当删除一个对象时，python解释器也会默认调用一个方法，这个方法为del()方法
del 程序结束后自动会调用
总结:
当有1个变量保存了对象的引用时，此对象的引用计数就会加1
当使用del删除变量指向的对象时，如果对象的引用计数不会1，比如3，那么此时只会让这个引用计数减1，即变为2，当再次调用del时，变为1，如果再调用1次del，此时会真的把对象进行删除
单继承

继承的概念
虽然子类没有定义init方法，但是父类有，所以在子类继承父类的时候这个方法就被继承了，所以只要创建Bosi的对象，就默认执行了那个继承过来的init方法

重写、
调用父类方法所谓重写，就是子类中，有一个和父类相同名字的方法，在子类中的方法会覆盖掉父类中同名的方法
静态方法和类方法
1、类方法是类对象所拥有的方法，需要用修饰器@classmethod来标识其为类方法，对于类方法，第一个参数必须是类对象，一般以cls作为第一个参数（当然可以用其他名称的变量作为其第一个参数，但是大部分人都习惯以’cls’作为第一个参数的名字，就最好用’cls’了），能够通过实例对象和类对象去访问。
类方法还有一个用途就是可以对类属性进行修改：
结果显示在用类方法对类属性修改之后，通过类对象和实例对象访问都发生了改变
类方法
需要通过修饰器@staticmethod来进行修饰，静态方法不需要多定义参数
总结
从类方法和实例方法以及静态方法的定义形式就可以看出来，类方法的第一个参数是类对象cls，那么通过cls引用的必定是类对象的属性和方法；而实例方法的第一个参数是实例对象self，那么通过self引用的可能是类属性、也有可能是实例属性（这个需要具体分析），不过在存在相同名称的类属性和实例属性的情况下，实例属性优先级更高。静态方法中不需要额外定义参数，因此在静态方法中引用类属性的话，必须通过类对象来引用
